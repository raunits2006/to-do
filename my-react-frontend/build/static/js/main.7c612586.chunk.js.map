{"version":3,"sources":["components/AddTodo.js","components/ModifyTodo.js","components/App.js","index.js"],"names":["AddTodo","todoName","setTodoName","useState","_jsxs","onSubmit","async","e","preventDefault","axios","post","todo_id","todo_name","window","location","reload","error","console","children","_jsx","type","value","onChange","target","placeholder","UnifiedTodos","todos","setTodos","useEffect","fetchTodos","response","get","data","handleDelete","delete","todoId","incompleteTodos","filter","todo","todo_completion","completedTodos","map","onClick","put","handleComplete","App","ModifyTodo","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"mMA+BeA,MA5BCA,KACd,MAAOC,EAAUC,GAAeC,mBAAS,IAczC,OACEC,eAAA,QAAMC,SAbaC,UACnBC,EAAEC,iBACF,UACQC,IAAMC,KAAK,8BAA+B,CAAEC,QAAS,EAAGC,UAAWX,IACzEC,EAAY,IAEZW,OAAOC,SAASC,QAClB,CAAE,MAAOC,GACPC,QAAQD,MAAM,qBAAsBA,EACtC,GAI6BE,SAAA,CAC3BC,cAAA,SACEC,KAAK,OACLC,MAAOpB,EACPqB,SAAWf,GAAML,EAAYK,EAAEgB,OAAOF,OACtCG,YAAY,aAEdL,cAAA,UAAQC,KAAK,SAAQF,SAAC,eACjB,EC2DIO,MAnFMA,KACnB,MAAOC,EAAOC,GAAYxB,mBAAS,IAEnCyB,qBAAU,KACRC,GAAY,GACX,IAGH,MAAMA,EAAavB,UACjB,IACE,MAAMwB,QAAiBrB,IAAMsB,IAAI,+BACjCJ,EAASG,EAASE,KACpB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,GAiBIiB,EAAe3B,UACnB,UACQG,IAAMyB,OAAO,qCAAsC,CACvDF,KAAM,CAAErB,QAASwB,KAGnBN,GACF,CAAE,MAAOb,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAIIoB,EAAkBV,EAAMW,QAAQC,IAAUA,EAAKC,kBAC/CC,EAAiBd,EAAMW,QAAQC,GAASA,EAAKC,kBAEnD,OACEnC,eAAA,OAAAc,SAAA,CACEC,cAAA,MAAAD,SAAI,UAGJC,cAAA,MAAAD,SAAI,eACJC,cAAA,MAAAD,SACGkB,EAAgBK,KAAKH,GACpBlC,eAAA,MAAAc,SAAA,CACEC,cAAA,UAAQuB,QAASA,IAtCJpC,WACrB,UACQG,IAAMkC,IAAI,uCAAwC,CACtDhC,QAASwB,IAGXN,GACF,CAAE,MAAOb,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GA6B+B4B,CAAeN,EAAK3B,SAASO,SAAC,WAE3C,IACToB,EAAK1B,UAAW,IACjBO,cAAA,UAAQuB,QAASA,IAAMT,EAAaK,EAAK3B,SAASO,SAAC,yBAL5CoB,EAAK3B,aAalBQ,cAAA,MAAAD,SAAI,cACJC,cAAA,MAAAD,SACGsB,EAAeC,KAAKH,GACnBlC,eAAA,MAAAc,SAAA,CACGoB,EAAK1B,UAAW,IACjBO,cAAA,UAAQuB,QAASA,IAAMT,EAAaK,EAAK3B,SAASO,SAAC,yBAF5CoB,EAAK3B,eAQd,ECnEKkC,MAXHA,IAEJzC,eAAA,OAAAc,SAAA,CACIC,cAAA,MAAAD,SAAI,aACJC,cAACnB,EAAO,IACRmB,cAAC2B,EAAU,O,MCJvBC,IAASC,OACP7B,cAAC8B,IAAMC,WAAU,CAAAhC,SACfC,cAAC0B,EAAG,MAENM,SAASC,eAAe,Q","file":"static/js/main.7c612586.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddTodo = () => {\n  const [todoName, setTodoName] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/todos', { todo_id: 0, todo_name: todoName });\n      setTodoName('');\n      // Force page reload (simple approach)\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={todoName}\n        onChange={(e) => setTodoName(e.target.value)}\n        placeholder=\"New Todo\"\n      />\n      <button type=\"submit\">Add Todo</button>\n    </form>\n  );\n};\n\nexport default AddTodo;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UnifiedTodos = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  // Fetch all todos from the backend\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  // Mark a todo as completed\n  const handleComplete = async (todoId) => {\n    try {\n      await axios.put('http://localhost:8000/todos/complete', {\n        todo_id: todoId,\n      });\n      // Refresh the list\n      fetchTodos();\n    } catch (error) {\n      console.error('Error completing todo:', error);\n    }\n  };\n\n  // Delete a todo\n  const handleDelete = async (todoId) => {\n    try {\n      await axios.delete('http://localhost:8000/todos/delete', {\n        data: { todo_id: todoId },\n      });\n      // Refresh the list\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  // Separate incomplete and completed todos\n  const incompleteTodos = todos.filter((todo) => !todo.todo_completion);\n  const completedTodos = todos.filter((todo) => todo.todo_completion);\n\n  return (\n    <div>\n      <h1>Todos</h1>\n\n      {/* Incomplete todos with complete & delete icons */}\n      <h2>Incomplete</h2>\n      <ul>\n        {incompleteTodos.map((todo) => (\n          <li key={todo.todo_id}>\n            <button onClick={() => handleComplete(todo.todo_id)}>\n              ‚úÖ\n            </button>{' '}\n            {todo.todo_name}{' '}\n            <button onClick={() => handleDelete(todo.todo_id)}>\n              üóëÔ∏è\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {/* Completed todos with delete icon */}\n      <h2>Completed</h2>\n      <ul>\n        {completedTodos.map((todo) => (\n          <li key={todo.todo_id}>\n            {todo.todo_name}{' '}\n            <button onClick={() => handleDelete(todo.todo_id)}>\n              üóëÔ∏è\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UnifiedTodos;","import React from 'react';\nimport AddTodo from './AddTodo';\nimport ModifyTodo from './ModifyTodo';\n\nconst App = () => {\n    return (\n        <div>\n            <h1>Todo App</h1>\n            <AddTodo />\n            <ModifyTodo />\n            \n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}